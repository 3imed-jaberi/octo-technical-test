import React, { useState, useEffect } from 'react'
import PropTypes from 'prop-types'
import { useLocation } from 'react-router-dom'
import { makeStyles } from '@material-ui/core/styles'
import Table from '@material-ui/core/Table'
import TableBody from '@material-ui/core/TableBody'
import TableCell from '@material-ui/core/TableCell'
import TableContainer from '@material-ui/core/TableContainer'
import TableHead from '@material-ui/core/TableHead'
import TableRow from '@material-ui/core/TableRow'
import Paper from '@material-ui/core/Paper'
import { DASHBOARD_STEPS } from '../constants/dashboard'

const useStyles = makeStyles((theme) => ({
  table: {
    minWidth: 650,
  },
  tableContainer: {
    borderRadius: 15,
    maxWidth: '100%',
  },
  tableHeaderCell: {
    fontWeight: 'bold',
    backgroundColor: '#F8F9FF',
    color: theme.palette.getContrastText(theme.palette.success.light),
  },
}))

const TableStepCell = ({ stepName }) => (
  <TableCell>
    <h3 style={{ textAlign: 'center' }}> {stepName} </h3>
  </TableCell>
)

TableStepCell.propTypes = {
  stepName: PropTypes.string.isRequired,
}

function DashBoard({ headerForm, headerColSpan, children }) {
  const classes = useStyles()
  const [isHomeScreen, setIsHomeScreen] = useState(true)
  const location = useLocation()

  useEffect(() => {
    setIsHomeScreen(['/', '/users'].includes(location.pathname))
  }, [location.pathname])

  return (
    <>
      <TableContainer component={Paper} className={classes.tableContainer}>
        <Table className={classes.table} aria-label="simple table">
          <TableHead>
            <TableRow>
              <TableCell
                colSpan={headerColSpan}
                className={classes.tableHeaderCell}
              >
                {headerForm}
              </TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {isHomeScreen && (
              <TableRow>
                <TableStepCell stepName={DASHBOARD_STEPS.progress} />
                <TableStepCell stepName={DASHBOARD_STEPS.info} />
                <TableStepCell stepName={DASHBOARD_STEPS.docs} />
                <TableStepCell stepName={DASHBOARD_STEPS.api} />
                <TableStepCell stepName={DASHBOARD_STEPS.siret} />
              </TableRow>
            )}
            <TableRow>{children}</TableRow>
          </TableBody>
        </Table>
      </TableContainer>
    </>
  )
}

DashBoard.defaultProps = {
  headerColSpan: 5,
}

DashBoard.propTypes = {
  headerForm: PropTypes.element.isRequired,
  headerColSpan: PropTypes.number,
  children: PropTypes.element.isRequired,
}

export default DashBoard
